#!/usr/bin/expect

################################################################################
# Stops STB boot up (run while STB starting up)
# 
# Usage           : ./stop_stb <STB_IP_ADDRESS> "[Kill Command]"
# Example         : tnet 192.168.1.202 "killall -9 stb_run"
#
set stop_version "1.9"

################################################################################

################################################################################
# User customizable variables - Please customize this for your setup.
################################################################################
# Note: The following is your host/pc ip address.
set ip_address       "192.168.1.1"
set home_dir         "/home/$env(USER)"
set nfs_local_dir    "/export/target/"
################################################################################

puts "tnet script version: $stop_version"

if {$argc > 3 || $argc < 2} {
 puts "Usage: tnet <ip address> \[kill command\]"
 puts "Ex: tnet 192.168.1.104 "
 puts "Ex: tnet 192.168.1.104  \"kill -USR2 1\""
 puts "Ex: tnet_nfs 192.168.1.24 \"kill -USR2 1\""
 exit
}

log_user 0
set timeout 2

set ip [lindex $argv 0]
set cmd [lindex $argv 1]
set prompt "~ #"

for {set x 0} {$x<120} {incr x} {
 # Open a telnet session to a remote server, and wait for a username prompt.
 spawn telnet $ip

 # Expect a timeout and then retry again.
 expect {
         timeout    {log_user 1; puts "Try Again..."; log_user 0; continue;}
 	 "login:"   {send "root\r"; expect $prompt; send $cmd\r; break}
 }
}
}
interact
