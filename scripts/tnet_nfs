#!/usr/bin/expect

################################################################################
# Expect script to telnet to a given 
# ip address and kill a given process.
# 
# Original Author : Vijay.Jayaraman
# Version         : 1.8
# Last Updated    : 09-08-2011
# Usage           : tnet <STB_IP_ADDRESS> <NFS_MOUNT_POINT> "[Kill Command]"
# Example         : tnet 192.168.1.202 delta "killall -9 stb_run"
#
# 1.10 - Use -CONT to sent in the cont_cmd, to work on ARM  
# 1.9 - Use soft,nolock,tcp for mount option
# 1.8 - Use nfs mount point as passing argument
#       
# 1.7 - Use $env(USER) to point to the user's home dir instead of hard-coding it.
#       Also mount /home on STB to NFS mount home/cc_bld - it is very risky to 
#       mount the NFS mount point's hoe dir since that can unknowingly/
#       maliciously be rm -rf by the STB user/developer.
# 1.6 - Minor change. Going back to ip_address from host_ip_addr since this may 
#       cause confusion when copy-pasting the custom vars from an old script.
# 1.5 - Adding rsize, wsize to the mount cmd since older PCs have issues w/o it.
#       Added some comments and moved a few things around.
# 1.4 - Pulling out user customizable variables to top for easy modification.
# 1.3 - Unmounting /var/mnt/drivers as well to be safe.
# 1.2 - Unmounting /usr/local before mounting it again.
# 1.1 - Fixed bug with export command.
#
set tnet_version "1.9"

################################################################################

################################################################################
# User customizable variables - Please customize this for your setup.
################################################################################
# Note: The following is your host/pc ip address.
set ip_address       "192.168.1.1"
set home_dir         "/home/$env(USER)"
set nfs_local_dir    "/export/target/"
################################################################################

puts "tnet script version: $tnet_version"

if {$argc > 3} {
 puts "Usage: tnet <ip address> <mount_point> \[kill command\]"
 puts "Ex: tnet 192.168.1.104  xip813"
 puts "Ex: tnet 192.168.1.104  \"kill -USR2 1\" delta"
 puts "Ex: tnet_nfs 192.168.1.24 \"kill -USR2 1\" wally"
 exit
}

log_user 0
set timeout 2

set ip "192.168.1.24"
set cmd "kill -USR2 1"
set stb "hopper"

if {$argc > 0} {
set ip [lindex $argv 0]
}
if {$argc > 1} {
set stb [lindex $argv 1]
}
if {$argc > 2} {
set stb [lindex $argv 2]
}

set prompt "~ #"

set mount_opts   "-o soft,nolock,tcp,rsize=1024,wsize=1024 "

set unmount_cmd  "umount /usr/local /var/mnt/drivers \r"
set mount_cmd    "mount $mount_opts $ip_address:$nfs_local_dir$stb /mnt/mine \r"
set export_cmd   "export LD_LIBRARY_PATH=/usr/local/lib:\$LD_LIBRARY_PATH\r cd /mnt/mine/ \r"
set mount_driver "mount $mount_opts $ip_address:$nfs_local_dir$stb/drivers /mnt/drivers \r"
set mount_tmp    "mount $mount_opts $ip_address:$nfs_local_dir$stb/tmp /tmp \r"
set cont_cmd "kill -CONT 1\r"

#puts "$mount_cmd"
#puts "$cmd"

for {set x 0} {$x<120} {incr x} {
 # Open a telnet session to a remote server, and wait for a username prompt.
 spawn telnet $ip

 # Expect a timeout and then retry again.
 expect {
         timeout    {log_user 1; puts "Try Again..."; log_user 0; continue;}
 	 "login:"   {send "root\r"; expect $prompt; send $cmd\r; break}
 }
}

#expect $prompt
#send $unmount_cmd

expect $prompt
send $mount_cmd

expect $prompt
send $export_cmd

#expect $prompt
#send $mount_tmp

#if {$argc == 3} {
expect $prompt
send $mount_driver

expect $prompt
send $cont_cmd
#}
interact
